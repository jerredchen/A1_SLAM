{
  # Prior initial pose estimates and standard deviations,
  # formatted as [x, y, z, roll, pitch, yaw], in m and degrees.
  prior_pose_estimate: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
  prior_pose_sigmas: [1.0e-8, 1.0e-8, 1.0e-8, 1.0e-9, 1.0e-9, 1.0e-9],

  #########################################################################################
  ##################################         IMU         ##################################
  #########################################################################################

  imu: {

    # The topic name for HighState message.
    topic: /HighState,

    # The number of measurements that the IMU should preintegrate before adding an IMU factor.
    imu_factor_rate: 50,

    # Prior initial velocity estimates and standard deviations, formatted as [x, y, z], in m/s.
    prior_vel_estimate: [0.0, 0.0, 0.0],
    prior_vel_sigmas: [1.0e-8, 1.0e-8, 1.0e-8],

    # Prior initial biases and standard devations, formatted as [accel_x, accel_y, accel_z, gyro_x, gyro_y, gyro_z],
    # in m/s^2 and rad/s for the accelerometer and gyroscope respectively.
    prior_bias_estimate: [-0.105882, 0.0914219, -0.239811, 0.000204728, -0.000155793, -0.000395044],
    prior_bias_sigmas: [1.0e-3, 1.0e-3, 1.0e-3, 1.0e-5, 1.0e-5, 1.0e-5],

    # The sensor noise standard deviation of the accelerometer formatted as [x, y, z], in m/s^2/sqrt(Hz).
    # accel_sigmas: [0.1333, 0.0767, 0.1400],
    accel_sigmas: [0.001333, 0.000767, 0.001400],
    # The sensor noise standard deviation of the gyroscope formatted as [x, y, z], in rad/s/sqrt(Hz).
    gyro_sigmas: [0.0110, 0.0167, 0.0090],
    # The uncertainty standard deviation during integration formatted as [x, y, z].
    integration_sigmas: [1.0e-5, 1.0e-5, 1.0e-5]

  },

  #########################################################################################
  ##################################       LiDAR         ##################################
  #########################################################################################

  lidar2d: {

    # The topic name for the 2D LiDAR.
    topic: /slamware_ros_sdk_server_node/scan,

    # The noise standard deviation of registering two laser scans formatted as [x, y, theta], in m and degrees.
    icp_noise: [5.0e-3, 5.0e-3, 5.0e-4],

    # The number of scans that should be compared for calculating skip connections.
    submap_length: 4,

    # The method used for scan-to-scan registration.
    registration: point-to-line,

    # If using point-to-line registration, the number of k-nearest neighbors to consider for normal estimation.
    normal_kneighbors: 3,

    # The minimum range distance that should be considered from the LIDAR.
    min_range: 0,
    # The maximum range distance that should be considered from the LIDAR.
    max_range: 5,

    # The minimum number of neighboring points within a specified radius to not be considered an outlier.
    outlier_neighbors: 0,
    # The radius to be considered for outlier removal, in meters.
    outlier_radius: 5.0


  },

  #########################################################################################
  ##################################       Depth         ##################################
  #########################################################################################

  depth: {

    # The topic name for the depth camera.
    topic: /camera/depth/image_rect_raw

  }
}